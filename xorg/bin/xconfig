#!/bin/sh

configure_xorg()
{
  # First check if we are running as a VirtualBox guest
  pciconf -lv | grep -q "VirtualBox"
  if [ $? -eq 0 ] ; then
    cp /usr/local/etc/X11/cardDetect/XF86Config.virtualbox /etc/X11/xorg.conf
    kldload vboxguest
    /usr/local/sbin/VBoxService
  else
    pkg delete -fy virtualbox-ose-additions >/dev/null 2>/dev/null
  fi

  # Check to see if we are running as VMware guest
  pciconf -lv | grep -q vmware
  if [ $? -eq 0 ] ; then
    cp /usr/local/etc/X11/cardDetect/XF86Config.vmware /etc/X11/xorg.conf
  fi

  # Check to see if NVidia graphics is primary
  pciconf -lv | grep -B 4 VGA | grep -q NVIDIA
  if [ $? -eq 0 ] ; then
    cp /usr/local/etc/X11/cardDetect/XF86Config.nvidia /etc/X11/xorg.conf
    kldload nvidia-modeset
  else
    pkg delete -fy nvidia-driver >/dev/null 2>/dev/null
  fi

  # Figure out if UEFI or BIOS
  BOOTMODE=`sysctl -n machdep.bootmethod`
  export BOOTMODE

  # Check if booted via GRUB and set BOOTMODE correctly (For GhostBSD and friends)
  if [ -n "`kenv grub.platform 2>/dev/null`" -a "`kenv grub.platform 2>/dev/null`" = "efi" ] ; then
    BOOTMODE="UEFI"
  fi

  pciconf -lv | grep -B 4 VGA |grep -q Intel
  if [ $? -eq 0 -a "${BOOTMODE}" = "UEFI" ]; then
    cp /usr/local/etc/X11/cardDetect/XF86Config.scfb /etc/X11/xorg.conf
  fi

  pciconf -lv | grep -B 4 VGA |grep -q AMD
  if [ $? -eq 0 -a "${BOOTMODE}" = "UEFI" ]; then
    cp /usr/local/etc/X11/cardDetect/XF86Config.scfb /etc/X11/xorg.conf
  fi
}


if [ ! -f "/etc/X11/xorg.conf" ]; then
  configure_xorg
fi
