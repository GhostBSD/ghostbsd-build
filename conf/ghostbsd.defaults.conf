#!/bin/sh
#
# Copyright (c) 2009-2014, GhostBSD Project All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistribution's of source code must retain the above copyright notice, this
#    list of conditions and the following disclaimer.
#
# 2. Redistribution's in binary form must reproduce the above copyright notice,
#    this list of conditions and the following disclaimer in the documentation
#    and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
# ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# $Id: ghostbsd.defaults.conf,v 1.14 Saturday, May 19 2012 09:42 Eric Turgeon$
#

# The default configuration is a file who contain variable for the whole toolkit.


# Packages profile you can set up mate, xfce4 lxde and gnome2. A custom package
# list and be added in packages/. PACK_PROFILE is also use to defined
# extra/lxde.sh or extra/gnome2.sh.
PACK_PROFILE=${PACK_PROFILE:-"mate"}

# ARCH to be built (amd64 or i386)
ARCH="i386"

# Memory device back-end can be (mem or file).
# "mem" will speed the build process. But you need an machine with more than 4G ram
# for amd64 arch. "file" it's the safest way but at lowest speed
MD_BACKEND=${MD_BACKEND:-"file"}

# PKG_LOCATION is where the package are store. they will be use to build the system.
# To build those package use tool/make_allpkg.sh.
# to build i386 pkg you need to be in a i386 system.
PKG_LOCATION=${PKG_LOCATION:-"/usr/obj/packages/$ARCH/"}

# Path where files are installed.
BASEDIR=${BASEDIR:-"/usr/ghostbsd-fs/$ARCH"}

# Warning GHOSTBSD_LABEL must be an single word otherwise the CD won't boot
GHOSTBSD_LABEL=${GHOSTBSD_LABEL:-"GhostBSD"}

# GhostBSD User.
GHOSTBSD_USER="${GHOSTBSD_USER:-ghostbsd}"
HOME="/home/${GHOSTBSD_USER}"
# Temporary directory used when building images
CLONEDIR=${CLONEDIR:-"/usr/ghostbsd-clone/$ARCH"}
TCLONEDIR=${TCLONEDIR:-"/usr/ghostbsd-tclone/$ARCH"}

# Directory with system sources.
SRCDIR=${SRCDIR:-"/usr/src"}

# Path of the built ISO, use absolute path>
ISOPATH=${ISOPATH:-"/usr/obj/GhostBSD4.0-BETA3-$ARCH.iso"}

# Path of the built image, use absolute path>
IMGPATH=${IMGPATH:-"/usr/obj/GhostBSD4.0-BETA3-$ARCH.img"}

# Arguments passed to make(1) when building world and kernel.
# Cannot be an environment variable.
MAKEJ_WORLD=${MAKEJ_WORLD:-"-j6"}
MAKEJ_KERNEL=${MAKEJ_KERNEL:-"-j6"}

# The src.conf file contains settings that will apply to every build
# involving the FreeBSD source tree; see build(7) and src.conf(5)
# only for 7.0-CURRENT
SRC_CONF=${SRC_CONF:-"/dev/null"}

# Set EXTRA variable to the additional plugins you want to run in your
# system. Please note that plugins are executed in the same order as
# listed in this variable
EXTRA="adduser autologin ghostbsd installer dm ${PACK_PROFILE}"

# CURSOR_THEME is the default X cursor that will be in the system.
CURSOR_THEME="Vanilla-DMZ"

# UNION_DIRS is derectory who gonna be writable on the live media.
UNION_DIRS=${UNION_DIRS:-"media root mnt cdmnt-install tmp home boot usr/local/www usr/local/etc var usr/local/share/mate-panel"}

UNION_DIRS_MTREE=${UNION_DIRS_MTREE:-"etc media root tmp mnt var"}

# Define NO_BUILDWORLD to avoid rebuilding world. Be sure you know
# what you're doing, you should have an already compiled world
NO_BUILDWORLD=YES

# Define NO_BUILDKERNEL to avoid rebuilding kernel. Be sure you know
# what you're doing, you should have an already compiled kernel
NO_BUILDKERNEL=YES
