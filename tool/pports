#!/bin/sh
#
# Parallel Ports Builder for FreeBSD
# by Jason Hall
#    cakersq@gmail.com
#
# Future Improvements
#  - Speed up dependency gathering phase
#  - Check for conflicts on gathered depends
#  - Background distfile download and extraction
#
# Version 0.5.7 2011/08/11
#  - Bug fixes in Error Checking
#  - Changed Interactive (non-batch) mode, from "config-conditional" to "config"

tempdir=/tmp/pports-$$
batch=0
jobs=$(( `sysctl -n kern.smp.cpus`+1 ))
destdir=`make -V DESTDIR`

_usage () {
	echo
	echo "Usage:"
	echo " `basename $0` [-bh] [-d /dir] [-j #] category/port [category/port ...]"
	echo "  -b: Batch - Don't prompt for configuration"
	echo "  -d: DestDir - Install to specified directory"
	echo "  -h: Help - this display"
	echo "  -j: Jobs - Defaults to $jobs (# CPUs+1)"
	echo
	echo "  Example: `basename $0` -b x11/xorg x11/gnome2"
	echo
	exit 0
}

_removeinstalled () {
	local length linecount line

	length=`cat $tempdir/index | wc -l`
	linecount=1
	touch $tempdir/index2
	while [ $linecount -le $length ]
	do
		line=`sed -n ${linecount}p $tempdir/index`
		if [ ! -d $destdir/var/db/pkg/`echo $line | cut -d \| -f 2` ]
		then
			echo "$line" >>$tempdir/index2
		fi

		linecount=$(( $linecount+1 ))
	done
	mv $tempdir/index2 $tempdir/index
}

_updateindex () {
	local length linecount line depends depend

	length=`cat $tempdir/index | wc -l`
	linecount=1
	while [ $linecount -le $length ]
	do
		line=`sed -n ${linecount}p $tempdir/index`
		depends=
		for depend in `echo $line | cut -d \| -f 3`
		do
			if [ `cat $tempdir/index $tempdir/install | grep -c "^$depend|"` -gt 0 -o `ps -xo command | grep -c "^make -C $depend "` -gt 0 ]
			then
				depends="$depends $depend"
			fi
		done
		depends=${depends# }
		echo "`echo $line | cut -d \| -f 1-2`|$depends" >>$tempdir/index2

		linecount=$(( $linecount+1 ))
	done
	grep "|$" $tempdir/index2 >>$tempdir/install
	grep -v "|$" $tempdir/index2 >$tempdir/index
	rm $tempdir/index2
}

while getopts "bd:hj:" OPTION
do
	case $OPTION in
	b)	batch=1
		;;
	d)	destdir=$OPTARG
		;;
	h|?)	_usage
		;;
	j)	jobs=$OPTARG
		;;
	esac
done

count=1
while [ $count -lt $OPTIND ]
do
	shift
	count=$(( $count+1 ))
done

if [ $# -eq 0 ]
then
	_usage
fi

if [ -n "$destdir" -a ! -d $destdir ]
then
	echo DestDir $destdir does not exist!
	exit 1
fi

if [ ! -d /usr/ports/packages ]
then
	mkdir -p /usr/ports/packages
fi

if [ -d $tempdir ]
then
	rm -rf $tempdir
fi
mkdir -p $tempdir
touch $tempdir/depends
touch $tempdir/index
touch $tempdir/install

if [ -n "$destdir" ]
then
	if [ ! -f $destdir/etc/resolv.conf ]
	then
		cp /etc/resolv.conf $destdir/etc/
	fi
	if [ `ls $destdir/dev | wc -l` -eq 0 ]
	then
		unmountdev=1
		mount -t devfs devfs $destdir/dev
	else
		unmountdev=0
	fi
	if [ ! -d $destdir/usr/ports ]
	then
		mkdir $destdir/usr/ports
	fi
	mount_nullfs /usr/ports $destdir/usr/ports
fi

for specified in $*
do
	if [ -d /usr/ports/$specified ]
	then
		if [ $batch -eq 0 ]
		then
			if [ -z "$destdir" ]
			then
				make -C /usr/ports/$specified config
			else
				chroot $destdir make -C /usr/ports/$specified DESTDIR= config
			fi
		fi
	else
		echo Port $specified does not exist!
		exit 1
	fi
done

for specified in $*
do
	echo -n Gathering Dependencies for $specified
	depends=/usr/ports/$specified
	while [ -n "$depends" ]
	do
		for depend in $depends
		do
			if [ `grep -c "^$depend|" $tempdir/index` -eq 0 ]
			then
				count=$(( `cat $tempdir/index | wc -l`+1 ))
				mod=$(( $count%10 ))
				if [ $mod -eq 0 ]
				then
					echo -n $count
				else
					echo -n .
				fi

				if [ -z "$destdir" ]
				then
					pkgname=`make -C $depend package-name`
					tempdependslist=`make -C $depend build-depends-list run-depends-list`
				else
					pkgname=`chroot $destdir make -C $depend DESTDIR= package-name`
					tempdependslist=`chroot $destdir make -C $depend DESTDIR= build-depends-list run-depends-list`
				fi
				tempdepends=
				for tempdepend in $tempdependslist
				do
					if [ `echo $tempdepends | grep -c $tempdepend` -eq 0 ]
					then
						tempdepends="$tempdepends $tempdepend"
					fi
				done
				tempdepends=${tempdepends# }
				if [ -n "$tempdepends" ]
				then
					echo $tempdepends >>$tempdir/depends
				fi

				echo "$depend|$pkgname|$tempdepends" >>$tempdir/index
			fi
		done

		depends=`sed -n 1p $tempdir/depends`
		sed 1d $tempdir/depends >$tempdir/depends2
		mv $tempdir/depends2 $tempdir/depends
	done
	echo
done
rm $tempdir/depends

_removeinstalled
_updateindex
count=1
total=$(( `cat $tempdir/index $tempdir/install | wc -l` ))

if [ -z "$destdir" ]
then
	chroot=""
else
	chroot="chroot $destdir"
fi
cat >>$tempdir/build.sh <<- EOF_BUILD
	#!/bin/sh
	tempdir=$tempdir
	chroot="$chroot"
	port=\$1
	pkgname=\$2

	\$chroot make -C \$port -D NO_DEPENDS -D BATCH DESTDIR= package 1>/dev/null 2>&1
	error=\$?
	if [ \$error -gt 0 -a ! -d /var/db/pkg/\$pkgname ]
	then
		echo   \${port#/usr/ports/} Error Level \$error >>\$tempdir/errors
	fi
	\$chroot make -C \$port -D NOCLEANDEPENDS DESTDIR= clean 1>/dev/null 2>&1
EOF_BUILD

while [ `cat $tempdir/install | wc -l` -gt 0 -a ! -f $tempdir/errors ]
do
	echo -n [
	tempcount=${#count}
	while [ $tempcount -lt ${#total} ]
	do
		echo -n " "
		tempcount=$(( $tempcount+1 ))
	done
	echo -n "$count/$total] "

	line=`sed -n 1p $tempdir/install`
	sed 1d $tempdir/install >$tempdir/install2
	mv $tempdir/install2 $tempdir/install

	port=`echo $line | cut -d \| -f 1`
	pkgname=`echo $line | cut -d \| -f 2`

	if [ -f /usr/ports/packages/All/$pkgname.tbz ]
	then
		echo Installing ${port#/usr/ports/}
		if [ -z "$destdir" ]
		then
			pkg_add -i /usr/ports/packages/All/$pkgname.tbz >/dev/null 2>&1
		else
			pkg_add -i -C $destdir /usr/ports/packages/All/$pkgname.tbz >/dev/null 2>&1
		fi
	else
		echo Building ${port#/usr/ports/}
		daemon -f sh $tempdir/build.sh $port $pkgname

		sleep 1
		while [ `ps -xo command | grep -c "^make -C /usr/ports/"` -ge $jobs ]
		do
			sleep 1
		done
	fi

	while [ `cat $tempdir/install | wc -l` -eq 0 -a `cat $tempdir/index | wc -l` -gt 0 ]
	do
		_updateindex
		if [ `cat $tempdir/install | wc -l` -eq 0 ]
		then
			sleep 15
		fi
	done

	count=$(( $count+1 ))
done

while [ `ps -xo command | grep -c "^make -C /usr/ports/"` -gt 0 ]
do
	sleep 1
done

if [ -n "$destdir" ]
then
	if [ $unmountdev -eq 1 ]
	then
		umount $destdir/dev
	fi
	umount $destdir/usr/ports
fi

if [ -f $tempdir/errors ]
then
	echo
	echo Error building port\(s\):
	cat $tempdir/errors

	rm -rf $tempdir
	exit 1
else
	echo Done!

	rm -rf $tempdir
	exit 0
fi
